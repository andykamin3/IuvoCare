// Generated by view binder compiler. Do not edit!
package com.andreskaminker.iuvohelp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.andreskaminker.iuvohelp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentUserConfigBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button addUserButton;

  @NonNull
  public final EditText editTextPatientMail;

  @NonNull
  public final ConstraintLayout frameLayout5;

  @NonNull
  public final RecyclerView recyclerViewUsers;

  @NonNull
  public final TextView textView7;

  @NonNull
  public final TextView textView8;

  private FragmentUserConfigBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button addUserButton, @NonNull EditText editTextPatientMail,
      @NonNull ConstraintLayout frameLayout5, @NonNull RecyclerView recyclerViewUsers,
      @NonNull TextView textView7, @NonNull TextView textView8) {
    this.rootView = rootView;
    this.addUserButton = addUserButton;
    this.editTextPatientMail = editTextPatientMail;
    this.frameLayout5 = frameLayout5;
    this.recyclerViewUsers = recyclerViewUsers;
    this.textView7 = textView7;
    this.textView8 = textView8;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentUserConfigBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentUserConfigBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_user_config, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentUserConfigBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addUserButton;
      Button addUserButton = rootView.findViewById(id);
      if (addUserButton == null) {
        break missingId;
      }

      id = R.id.editTextPatientMail;
      EditText editTextPatientMail = rootView.findViewById(id);
      if (editTextPatientMail == null) {
        break missingId;
      }

      ConstraintLayout frameLayout5 = (ConstraintLayout) rootView;

      id = R.id.recyclerViewUsers;
      RecyclerView recyclerViewUsers = rootView.findViewById(id);
      if (recyclerViewUsers == null) {
        break missingId;
      }

      id = R.id.textView7;
      TextView textView7 = rootView.findViewById(id);
      if (textView7 == null) {
        break missingId;
      }

      id = R.id.textView8;
      TextView textView8 = rootView.findViewById(id);
      if (textView8 == null) {
        break missingId;
      }

      return new FragmentUserConfigBinding((ConstraintLayout) rootView, addUserButton,
          editTextPatientMail, frameLayout5, recyclerViewUsers, textView7, textView8);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
